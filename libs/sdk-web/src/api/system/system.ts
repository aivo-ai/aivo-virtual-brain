/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * AIVO Notification Service API
 * Real-time notification service with WebSocket hub, push subscriptions, and daily digest functionality.

## Features
- **WebSocket Hub**: Real-time notification delivery via WebSocket connections
- **Push Subscriptions**: Browser push notifications with Web Push API
- **Daily Digest**: Automated daily summary notifications
- **Multi-channel Delivery**: Support for WebSocket, push, email, and in-app notifications
- **Real-time Collaboration**: 1-to-N message fanout for collaborative features

## Authentication
All endpoints require JWT authentication via the `Authorization` header:
```
Authorization: Bearer <jwt_token>
```

## WebSocket Connection
Connect to real-time notifications via WebSocket:
```
wss://api.aivo.ai/notification-svc/ws/notify?token=<jwt_token>
```

 * OpenAPI spec version: 1.0.0
 */
import axios from "axios";
import type { AxiosRequestConfig, AxiosResponse } from "axios";

import type { GetHealth200 } from "../../types";

export const getSystem = () => {
  /**
   * Service health status
   * @summary Health check
   */
  const getHealth = <TData = AxiosResponse<GetHealth200>>(
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.get(`/health`, options);
  };
  return { getHealth };
};
export type GetHealthResult = AxiosResponse<GetHealth200>;
