# Default values for _template
# This is a YAML-formatted file.
# This template can be used to create new service configurations

replicaCount: 1

image:
  repository: aivo/template-service
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: service.aivo.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Database configuration (example)
database:
  enabled: false
  type: "postgresql"
  host: "localhost"
  port: 5432
  name: "template_db"
  username: "template_user"
  password: "template-password"

# Cache configuration (example)
cache:
  enabled: false
  type: "redis"
  host: "localhost"
  port: 6379

# Environment variables
env:
  - name: NODE_ENV
    value: "production"
  - name: LOG_LEVEL
    value: "info"
  - name: PORT
    value: "8080"

# Health checks
healthChecks:
  liveness:
    httpGet:
      path: /health
      port: 8080
    initialDelaySeconds: 30
    periodSeconds: 10
  readiness:
    httpGet:
      path: /ready
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 5

# Monitoring configuration
monitoring:
  enabled: true
  prometheus:
    scrape: true
    port: 9090
    path: /metrics

# Service mesh configuration
serviceMesh:
  enabled: false
  istio:
    enabled: false
    mTLS: true
