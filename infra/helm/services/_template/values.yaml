# Service configuration
nameOverride: ""
fullnameOverride: ""

# Global configuration (inherited from platform)
global:
  domain: aivo.ai
  environment: production
  imageRegistry: ghcr.io
  imageRepository: aivo-ai/aivo-virtual-brain
  podSecurityStandard: restricted
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534
  fsGroup: 65534

# Image configuration
image:
  repository: "" # Will be set to global.imageRepository/serviceName
  tag: "latest"
  pullPolicy: IfNotPresent

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""
  automountServiceAccountToken: false

# Pod configuration
replicaCount: 2

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534
  fsGroup: 65534
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534
  capabilities:
    drop:
      - ALL
  seccompProfile:
    type: RuntimeDefault

# Service configuration
service:
  type: ClusterIP
  port: 8080
  targetPort: 8080
  annotations: {}

# Ingress configuration
ingress:
  enabled: false
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: api.aivo.ai
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: aivo-tls
      hosts:
        - api.aivo.ai

# Resource configuration
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 500m
    memory: 512Mi

# Horizontal Pod Autoscaler
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80
  # Custom metrics for RPS
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
        - type: Pods
          value: 4
          periodSeconds: 15
      selectPolicy: Max

# Vault configuration
vault:
  enabled: true
  role: "" # Will be set to serviceName
  secrets: []
  # Example:
  # - secretPath: "secret/data/aivo/auth-svc"
  #   template: |
  #     {{- with secret "secret/data/aivo/auth-svc" -}}
  #     DATABASE_URL="{{ .Data.data.database_url }}"
  #     JWT_SECRET="{{ .Data.data.jwt_secret }}"
  #     {{- end }}

# Environment variables
env: []
# - name: NODE_ENV
#   value: production

envFrom: []
# - secretRef:
#     name: app-secrets

# Volumes and volume mounts
volumes: []
# - name: tmp
#   emptyDir: {}

volumeMounts: []
# - name: tmp
#   mountPath: /tmp

# Liveness and readiness probes
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /ready
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Node selector, affinity and tolerations
nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - "{{ include \"aivo-service.name\" . }}"
          topologyKey: kubernetes.io/hostname

# Priority class
priorityClassName: aivo-normal

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Service monitor for Prometheus
serviceMonitor:
  enabled: true
  path: /metrics
  port: http
  interval: 30s
  scrapeTimeout: 10s

# Network policy
networkPolicy:
  enabled: true
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: 8080
  egress:
    - to: []
      ports:
        - protocol: TCP
          port: 53
        - protocol: UDP
          port: 53
    - to: []
      ports:
        - protocol: TCP
          port: 8200  # Vault
    - to: []
      ports:
        - protocol: TCP
          port: 5432  # PostgreSQL
    - to: []
      ports:
        - protocol: TCP
          port: 443   # HTTPS
