# Auth Service specific configuration
aivo-service:
  # Image configuration
  image:
    tag: "latest"
  
  # Service configuration
  service:
    port: 8080
    targetPort: 8080
  
  # Ingress configuration
  ingress:
    enabled: true
    hosts:
      - host: auth.aivo.ai
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: auth-aivo-tls
        hosts:
          - auth.aivo.ai
  
  # Resource configuration
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  
  # Autoscaling
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 15
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  
  # Vault configuration
  vault:
    enabled: true
    role: "auth-svc"
    secrets:
      - secretPath: "secret/data/aivo/auth-svc"
        template: |
          {{- with secret "secret/data/aivo/auth-svc" -}}
          DATABASE_URL="{{ .Data.data.database_url }}"
          JWT_SECRET="{{ .Data.data.jwt_secret }}"
          JWT_REFRESH_SECRET="{{ .Data.data.jwt_refresh_secret }}"
          BCRYPT_ROUNDS="{{ .Data.data.bcrypt_rounds }}"
          SESSION_SECRET="{{ .Data.data.session_secret }}"
          OAUTH_GOOGLE_CLIENT_ID="{{ .Data.data.oauth_google_client_id }}"
          OAUTH_GOOGLE_CLIENT_SECRET="{{ .Data.data.oauth_google_client_secret }}"
          OAUTH_MICROSOFT_CLIENT_ID="{{ .Data.data.oauth_microsoft_client_id }}"
          OAUTH_MICROSOFT_CLIENT_SECRET="{{ .Data.data.oauth_microsoft_client_secret }}"
          {{- end }}
  
  # Environment variables
  env:
    - name: NODE_ENV
      value: "production"
    - name: PORT
      value: "8080"
    - name: LOG_LEVEL
      value: "info"
    - name: CORS_ORIGIN
      value: "https://app.aivo.ai,https://admin.aivo.ai"
  
  # Health checks
  livenessProbe:
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /ready
      port: http
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3
  
  # Priority class for critical service
  priorityClassName: aivo-critical
  
  # Network policy - allow communication with user-svc and database
  networkPolicy:
    enabled: true
    ingress:
      - from:
          - namespaceSelector:
              matchLabels:
                name: ingress-nginx
        ports:
          - protocol: TCP
            port: 8080
      - from:
          - podSelector:
              matchLabels:
                app.kubernetes.io/name: user-svc
        ports:
          - protocol: TCP
            port: 8080
    egress:
      - to: []
        ports:
          - protocol: TCP
            port: 53
          - protocol: UDP
            port: 53
      - to: []
        ports:
          - protocol: TCP
            port: 8200  # Vault
      - to: []
        ports:
          - protocol: TCP
            port: 5432  # PostgreSQL
      - to: []
        ports:
          - protocol: TCP
            port: 443   # HTTPS for OAuth providers
