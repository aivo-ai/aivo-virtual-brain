# Default values for auth-svc
# This is a YAML-formatted file.

replicaCount: 2

image:
  repository: aivo/auth-svc
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: auth.aivo.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Redis configuration
redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: true
    password: "redis-password"

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "postgres-password"
    database: "auth_db"
    username: "auth_user"
    password: "auth-password"

# Application configuration
config:
  jwtSecret: "your-jwt-secret"
  jwtExpiration: "24h"
  bcryptSaltRounds: 12
  rateLimiting:
    enabled: true
    maxRequests: 100
    windowMs: 900000 # 15 minutes

# Environment variables
env:
  - name: NODE_ENV
    value: "production"
  - name: LOG_LEVEL
    value: "info"
  - name: PORT
    value: "8080"

# Health checks
healthChecks:
  liveness:
    httpGet:
      path: /health
      port: 8080
    initialDelaySeconds: 30
    periodSeconds: 10
  readiness:
    httpGet:
      path: /ready
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 5
