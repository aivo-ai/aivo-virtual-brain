# User Service specific configuration
aivo-service:
  # Image configuration
  image:
    tag: "latest"
  
  # Service configuration
  service:
    port: 8080
    targetPort: 8080
  
  # Ingress configuration
  ingress:
    enabled: true
    hosts:
      - host: users.aivo.ai
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: users-aivo-tls
        hosts:
          - users.aivo.ai
  
  # Resource configuration
  resources:
    requests:
      cpu: 150m
      memory: 256Mi
    limits:
      cpu: 800m
      memory: 1Gi
  
  # Autoscaling
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  
  # Vault configuration
  vault:
    enabled: true
    role: "user-svc"
    secrets:
      - secretPath: "secret/data/aivo/user-svc"
        template: |
          {{- with secret "secret/data/aivo/user-svc" -}}
          DATABASE_URL="{{ .Data.data.database_url }}"
          REDIS_URL="{{ .Data.data.redis_url }}"
          S3_ACCESS_KEY="{{ .Data.data.s3_access_key }}"
          S3_SECRET_KEY="{{ .Data.data.s3_secret_key }}"
          S3_BUCKET="{{ .Data.data.s3_bucket }}"
          ENCRYPTION_KEY="{{ .Data.data.encryption_key }}"
          {{- end }}
  
  # Environment variables
  env:
    - name: NODE_ENV
      value: "production"
    - name: PORT
      value: "8080"
    - name: LOG_LEVEL
      value: "info"
    - name: UPLOAD_MAX_SIZE
      value: "10MB"
  
  # Health checks
  livenessProbe:
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /ready
      port: http
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3
  
  # Priority class
  priorityClassName: aivo-high
  
  # Network policy
  networkPolicy:
    enabled: true
    ingress:
      - from:
          - namespaceSelector:
              matchLabels:
                name: ingress-nginx
        ports:
          - protocol: TCP
            port: 8080
      - from:
          - podSelector:
              matchLabels:
                app.kubernetes.io/name: auth-svc
        ports:
          - protocol: TCP
            port: 8080
    egress:
      - to: []
        ports:
          - protocol: TCP
            port: 53
          - protocol: UDP
            port: 53
      - to: []
        ports:
          - protocol: TCP
            port: 8200  # Vault
      - to: []
        ports:
          - protocol: TCP
            port: 5432  # PostgreSQL
      - to: []
        ports:
          - protocol: TCP
            port: 6379  # Redis
      - to: []
        ports:
          - protocol: TCP
            port: 443   # HTTPS for S3
