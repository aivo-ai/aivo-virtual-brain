apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: auth-svc-rollout
  namespace: aivo-system
  labels:
    app.kubernetes.io/name: auth-svc
    app.kubernetes.io/part-of: aivo-platform
    aivo.dev/component: authentication
spec:
  replicas: 3
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/name: auth-svc
  template:
    metadata:
      labels:
        app.kubernetes.io/name: auth-svc
        app.kubernetes.io/part-of: aivo-platform
        aivo.dev/component: authentication
        aivo.dev/owner: service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: auth-svc
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: auth-svc
          image: aivo/auth-svc:v1.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8081
              name: grpc
              protocol: TCP
          env:
            - name: PORT
              value: "8080"
            - name: GRPC_PORT
              value: "8081"
            - name: LOG_LEVEL
              value: "info"
            - name: PROMETHEUS_ENABLED
              value: "true"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
            seccompProfile:
              type: RuntimeDefault
          resources:
            requests:
              memory: 256Mi
              cpu: 100m
            limits:
              memory: 1Gi
              cpu: 1000m
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
  strategy:
    canary:
      maxSurge: "25%"
      maxUnavailable: 0
      analysis:
        templates:
          - templateName: comprehensive-slo
        args:
          - name: service-name
            value: auth-svc
          - name: namespace
            value: aivo-system
        startingStep: 2 # Start analysis after 10% traffic
        successfulRunHistoryLimit: 5
        unsuccessfulRunHistoryLimit: 3
      steps:
        # Step 1: Deploy canary with 10% traffic
        - setWeight: 10
        - pause:
            duration: 2m

        # Step 2: Increase to 25% with analysis
        - setWeight: 25
        - pause:
            duration: 5m

        # Step 3: Increase to 50% with extended analysis
        - setWeight: 50
        - pause:
            duration: 10m

        # Step 4: Increase to 75% with final validation
        - setWeight: 75
        - pause:
            duration: 5m

        # Step 5: Full promotion to 100%
        - setWeight: 100
        - pause:
            duration: 2m

      trafficRouting:
        nginx:
          stableIngress: auth-svc-stable
          annotationPrefix: nginx.ingress.kubernetes.io
          additionalIngressAnnotations:
            canary-by-header: X-Canary
            canary-by-header-value: "true"

      # Automatic rollback configuration
      abortScaleDownDelaySeconds: 30
      scaleDownDelaySeconds: 30
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: user-svc-rollout
  namespace: aivo-system
  labels:
    app.kubernetes.io/name: user-svc
    app.kubernetes.io/part-of: aivo-platform
    aivo.dev/component: user-management
spec:
  replicas: 3
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/name: user-svc
  template:
    metadata:
      labels:
        app.kubernetes.io/name: user-svc
        app.kubernetes.io/part-of: aivo-platform
        aivo.dev/component: user-management
        aivo.dev/owner: service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: user-svc
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: user-svc
          image: aivo/user-svc:v1.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8081
              name: grpc
              protocol: TCP
          env:
            - name: PORT
              value: "8080"
            - name: GRPC_PORT
              value: "8081"
            - name: LOG_LEVEL
              value: "info"
            - name: PROMETHEUS_ENABLED
              value: "true"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
            seccompProfile:
              type: RuntimeDefault
          resources:
            requests:
              memory: 256Mi
              cpu: 100m
            limits:
              memory: 1Gi
              cpu: 1000m
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
  strategy:
    canary:
      maxSurge: "25%"
      maxUnavailable: 0
      analysis:
        templates:
          - templateName: comprehensive-slo
        args:
          - name: service-name
            value: user-svc
          - name: namespace
            value: aivo-system
        startingStep: 2
        successfulRunHistoryLimit: 5
        unsuccessfulRunHistoryLimit: 3
      steps:
        - setWeight: 10
        - pause:
            duration: 2m
        - setWeight: 25
        - pause:
            duration: 5m
        - setWeight: 50
        - pause:
            duration: 10m
        - setWeight: 75
        - pause:
            duration: 5m
        - setWeight: 100
        - pause:
            duration: 2m
      trafficRouting:
        nginx:
          stableIngress: user-svc-stable
          annotationPrefix: nginx.ingress.kubernetes.io
          additionalIngressAnnotations:
            canary-by-header: X-Canary
            canary-by-header-value: "true"
      abortScaleDownDelaySeconds: 30
      scaleDownDelaySeconds: 30
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: inference-gateway-svc-rollout
  namespace: aivo-system
  labels:
    app.kubernetes.io/name: inference-gateway-svc
    app.kubernetes.io/part-of: aivo-platform
    aivo.dev/component: inference
spec:
  replicas: 4
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/name: inference-gateway-svc
  template:
    metadata:
      labels:
        app.kubernetes.io/name: inference-gateway-svc
        app.kubernetes.io/part-of: aivo-platform
        aivo.dev/component: inference
        aivo.dev/owner: service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: inference-gateway-svc
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: inference-gateway-svc
          image: aivo/inference-gateway-svc:v1.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8081
              name: grpc
              protocol: TCP
          env:
            - name: PORT
              value: "8080"
            - name: GRPC_PORT
              value: "8081"
            - name: LOG_LEVEL
              value: "info"
            - name: PROMETHEUS_ENABLED
              value: "true"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
            seccompProfile:
              type: RuntimeDefault
          resources:
            requests:
              memory: 512Mi
              cpu: 200m
            limits:
              memory: 2Gi
              cpu: 2000m
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
  strategy:
    canary:
      maxSurge: "25%"
      maxUnavailable: 0
      analysis:
        templates:
          - templateName: comprehensive-slo
        args:
          - name: service-name
            value: inference-gateway-svc
          - name: namespace
            value: aivo-system
        startingStep: 2
        successfulRunHistoryLimit: 5
        unsuccessfulRunHistoryLimit: 3
      steps:
        - setWeight: 10
        - pause:
            duration: 3m # Longer pause for inference service
        - setWeight: 25
        - pause:
            duration: 7m
        - setWeight: 50
        - pause:
            duration: 15m # Extended validation for critical service
        - setWeight: 75
        - pause:
            duration: 8m
        - setWeight: 100
        - pause:
            duration: 3m
      trafficRouting:
        nginx:
          stableIngress: inference-gateway-svc-stable
          annotationPrefix: nginx.ingress.kubernetes.io
          additionalIngressAnnotations:
            canary-by-header: X-Canary
            canary-by-header-value: "true"
      abortScaleDownDelaySeconds: 30
      scaleDownDelaySeconds: 30
