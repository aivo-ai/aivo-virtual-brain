apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: success-rate-slo
  namespace: aivo-system
  labels:
    app.kubernetes.io/name: success-rate-slo
    app.kubernetes.io/part-of: aivo-platform
    aivo.dev/component: release-analysis
spec:
  args:
    - name: service-name
    - name: namespace
      value: aivo-system
    - name: success-threshold
      value: "99.5"
    - name: duration
      value: "5m"
  metrics:
    - name: success-rate
      interval: 60s
      count: 5
      successCondition: "result[0] >= {{.args.success-threshold}}"
      failureLimit: 2
      provider:
        prometheus:
          address: http://prometheus.monitoring.svc.cluster.local:9090
          query: |
            (
              sum(rate(http_requests_total{job="{{.args.service-name}}",namespace="{{.args.namespace}}",code!~"5.."}[{{.args.duration}}])) /
              sum(rate(http_requests_total{job="{{.args.service-name}}",namespace="{{.args.namespace}}"}[{{.args.duration}}]))
            ) * 100
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: latency-p95-slo
  namespace: aivo-system
  labels:
    app.kubernetes.io/name: latency-p95-slo
    app.kubernetes.io/part-of: aivo-platform
    aivo.dev/component: release-analysis
spec:
  args:
    - name: service-name
    - name: namespace
      value: aivo-system
    - name: latency-threshold
      value: "200"
    - name: duration
      value: "5m"
  metrics:
    - name: p95-latency
      interval: 60s
      count: 5
      successCondition: "result[0] <= {{.args.latency-threshold}}"
      failureLimit: 2
      provider:
        prometheus:
          address: http://prometheus.monitoring.svc.cluster.local:9090
          query: |
            histogram_quantile(0.95,
              sum(rate(http_request_duration_seconds_bucket{job="{{.args.service-name}}",namespace="{{.args.namespace}}"}[{{.args.duration}}])) by (le)
            ) * 1000
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: error-budget-slo
  namespace: aivo-system
  labels:
    app.kubernetes.io/name: error-budget-slo
    app.kubernetes.io/part-of: aivo-platform
    aivo.dev/component: release-analysis
spec:
  args:
    - name: service-name
    - name: namespace
      value: aivo-system
    - name: error-budget-threshold
      value: "1.0"
    - name: duration
      value: "1h"
  metrics:
    - name: error-budget-burn-rate
      interval: 300s
      count: 3
      successCondition: "result[0] <= {{.args.error-budget-threshold}}"
      failureLimit: 1
      provider:
        prometheus:
          address: http://prometheus.monitoring.svc.cluster.local:9090
          query: |
            (
              1 - (
                sum(rate(http_requests_total{job="{{.args.service-name}}",namespace="{{.args.namespace}}",code!~"5.."}[{{.args.duration}}])) /
                sum(rate(http_requests_total{job="{{.args.service-name}}",namespace="{{.args.namespace}}"}[{{.args.duration}}]))
              )
            ) * 100 / 0.5
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: cpu-memory-slo
  namespace: aivo-system
  labels:
    app.kubernetes.io/name: cpu-memory-slo
    app.kubernetes.io/part-of: aivo-platform
    aivo.dev/component: release-analysis
spec:
  args:
    - name: service-name
    - name: namespace
      value: aivo-system
    - name: cpu-threshold
      value: "80"
    - name: memory-threshold
      value: "80"
    - name: duration
      value: "5m"
  metrics:
    - name: cpu-utilization
      interval: 60s
      count: 5
      successCondition: "result[0] <= {{.args.cpu-threshold}}"
      failureLimit: 3
      provider:
        prometheus:
          address: http://prometheus.monitoring.svc.cluster.local:9090
          query: |
            avg(
              rate(container_cpu_usage_seconds_total{pod=~"{{.args.service-name}}-.*",namespace="{{.args.namespace}}"}[{{.args.duration}}])
            ) * 100
    - name: memory-utilization
      interval: 60s
      count: 5
      successCondition: "result[0] <= {{.args.memory-threshold}}"
      failureLimit: 3
      provider:
        prometheus:
          address: http://prometheus.monitoring.svc.cluster.local:9090
          query: |
            avg(
              container_memory_working_set_bytes{pod=~"{{.args.service-name}}-.*",namespace="{{.args.namespace}}"} /
              container_spec_memory_limit_bytes{pod=~"{{.args.service-name}}-.*",namespace="{{.args.namespace}}"}
            ) * 100
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: comprehensive-slo
  namespace: aivo-system
  labels:
    app.kubernetes.io/name: comprehensive-slo
    app.kubernetes.io/part-of: aivo-platform
    aivo.dev/component: release-analysis
spec:
  args:
    - name: service-name
    - name: namespace
      value: aivo-system
  metrics:
    - name: success-rate
      interval: 60s
      count: 5
      successCondition: "result[0] >= 99.5"
      failureLimit: 2
      provider:
        prometheus:
          address: http://prometheus.monitoring.svc.cluster.local:9090
          query: |
            (
              sum(rate(http_requests_total{job="{{.args.service-name}}",namespace="{{.args.namespace}}",code!~"5.."}[5m])) /
              sum(rate(http_requests_total{job="{{.args.service-name}}",namespace="{{.args.namespace}}"}[5m]))
            ) * 100
    - name: p95-latency
      interval: 60s
      count: 5
      successCondition: "result[0] <= 200"
      failureLimit: 2
      provider:
        prometheus:
          address: http://prometheus.monitoring.svc.cluster.local:9090
          query: |
            histogram_quantile(0.95,
              sum(rate(http_request_duration_seconds_bucket{job="{{.args.service-name}}",namespace="{{.args.namespace}}"}[5m])) by (le)
            ) * 1000
    - name: error-budget-burn
      interval: 300s
      count: 2
      successCondition: "result[0] <= 2.0"
      failureLimit: 1
      provider:
        prometheus:
          address: http://prometheus.monitoring.svc.cluster.local:9090
          query: |
            (
              1 - (
                sum(rate(http_requests_total{job="{{.args.service-name}}",namespace="{{.args.namespace}}",code!~"5.."}[1h])) /
                sum(rate(http_requests_total{job="{{.args.service-name}}",namespace="{{.args.namespace}}"}[1h]))
              )
            ) * 100 / 0.5
