# AIVO Notification Service - REST API Documentation
# S1-12 Implementation - OpenAPI/Swagger Specification

openapi: 3.0.3
info:
  title: AIVO Notification Service API
  description: |
    Real-time notification service with WebSocket hub, push subscriptions, and daily digest functionality.

    ## Features
    - **WebSocket Hub**: Real-time notification delivery via WebSocket connections
    - **Push Subscriptions**: Browser push notifications with Web Push API
    - **Daily Digest**: Automated daily summary notifications
    - **Multi-channel Delivery**: Support for WebSocket, push, email, and in-app notifications
    - **Real-time Collaboration**: 1-to-N message fanout for collaborative features

    ## Authentication
    All endpoints require JWT authentication via the `Authorization` header:
    ```
    Authorization: Bearer <jwt_token>
    ```

    ## WebSocket Connection
    Connect to real-time notifications via WebSocket:
    ```
    wss://api.aivo.ai/notification-svc/ws/notify?token=<jwt_token>
    ```
  version: 1.0.0
  contact:
    name: AIVO Development Team
    email: dev@aivo.ai
  license:
    name: MIT

servers:
  - url: https://api.aivo.ai/notification-svc
    description: Production server
  - url: http://localhost:8003
    description: Development server

security:
  - BearerAuth: []

tags:
  - name: Push Subscriptions
    description: Manage browser push notification subscriptions
  - name: Notifications
    description: Create and manage notifications
  - name: Daily Digest
    description: Manage daily digest subscription preferences
  - name: WebSocket
    description: Real-time WebSocket connection status
  - name: Statistics
    description: Notification analytics and statistics

paths:
  /api/v1/push/subscribe:
    post:
      tags:
        - Push Subscriptions
      summary: Create push subscription
      description: |
        Register or update a web push subscription for browser notifications.
        This endpoint stores the push endpoint and encryption keys needed for 
        sending push notifications to the user's browser.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PushSubscriptionCreate"
            example:
              endpoint: "https://fcm.googleapis.com/fcm/send/ABC123..."
              p256dh_key: "BEl62iUYgUivxIkv69yViD3..."
              auth_key: "tBHItJI5svbpez7KI4CCXg"
              user_agent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
              device_info:
                platform: "web"
                browser: "chrome"
                version: "91.0.4472.124"
              notification_preferences:
                enabled_types:
                  ["iep_update", "assessment_complete", "signature_request"]
                quiet_hours_start: "22:00"
                quiet_hours_end: "08:00"
      responses:
        "200":
          description: Subscription created or updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PushSubscriptionResponse"
        "400":
          description: Invalid subscription data
        "401":
          description: Authentication required
        "500":
          description: Internal server error

  /api/v1/push/subscriptions:
    get:
      tags:
        - Push Subscriptions
      summary: List push subscriptions
      description: Get all active push subscriptions for the current user
      responses:
        "200":
          description: List of push subscriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PushSubscriptionResponse"

  /api/v1/push/subscriptions/{subscription_id}:
    delete:
      tags:
        - Push Subscriptions
      summary: Delete push subscription
      description: Remove a push subscription (disable push notifications for this device)
      parameters:
        - name: subscription_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Subscription deleted successfully
        "404":
          description: Subscription not found

  /api/v1/notifications:
    post:
      tags:
        - Notifications
      summary: Create notification
      description: |
        Create a new notification for the current user.
        The notification will be delivered via the specified channels.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationCreate"
            example:
              title: "IEP Document Updated"
              message: "The IEP document for John Doe has been updated and requires your review."
              notification_type: "iep_update"
              priority: "high"
              channels: ["websocket", "push", "in_app"]
              action_url: "/iep/12345/review"
              metadata:
                iep_id: "12345"
                student_name: "John Doe"
              scheduled_at: "2025-01-15T14:30:00Z"
      responses:
        "201":
          description: Notification created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationResponse"
        "400":
          description: Invalid notification data
        "401":
          description: Authentication required

    get:
      tags:
        - Notifications
      summary: List notifications
      description: |
        Get notifications for the current user with optional filtering and pagination.
      parameters:
        - name: limit
          in: query
          description: Maximum number of notifications to return
          schema:
            type: integer
            default: 20
            maximum: 100
        - name: offset
          in: query
          description: Number of notifications to skip
          schema:
            type: integer
            default: 0
        - name: unread_only
          in: query
          description: Return only unread notifications
          schema:
            type: boolean
            default: false
        - name: notification_type
          in: query
          description: Filter by notification type
          schema:
            $ref: "#/components/schemas/NotificationType"
      responses:
        "200":
          description: List of notifications
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationListResponse"

  /api/v1/notifications/{notification_id}/read:
    post:
      tags:
        - Notifications
      summary: Mark notification as read
      description: Mark a specific notification as read
      parameters:
        - name: notification_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Notification marked as read
        "404":
          description: Notification not found

  /api/v1/notifications/read-all:
    post:
      tags:
        - Notifications
      summary: Mark all notifications as read
      description: Mark all unread notifications as read for the current user
      responses:
        "200":
          description: All notifications marked as read
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Marked 15 notifications as read"

  /api/v1/digest/subscription:
    get:
      tags:
        - Daily Digest
      summary: Get digest subscription
      description: Get current user's daily digest subscription settings
      responses:
        "200":
          description: Digest subscription settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DigestSubscription"

    put:
      tags:
        - Daily Digest
      summary: Update digest subscription
      description: Update daily digest preferences for the current user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DigestSubscriptionUpdate"
            example:
              is_enabled: true
              delivery_time: "07:00"
              timezone: "America/New_York"
              frequency: "daily"
              include_types:
                ["iep_update", "assessment_complete", "signature_request"]
              exclude_weekends: false
              min_priority: "normal"
      responses:
        "200":
          description: Digest subscription updated successfully

  /api/v1/notifications/stats:
    get:
      tags:
        - Statistics
      summary: Get notification statistics
      description: Get notification statistics and analytics for the current user
      parameters:
        - name: days
          in: query
          description: Number of days to include in statistics
          schema:
            type: integer
            default: 7
            minimum: 1
            maximum: 30
      responses:
        "200":
          description: Notification statistics
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationStats"

  /ws/notify:
    get:
      tags:
        - WebSocket
      summary: WebSocket connection endpoint
      description: |
        Connect to real-time notifications via WebSocket.

        **Connection URL**: `ws://localhost:8003/ws/notify?token=<jwt_token>`

        ## Message Types

        ### Client to Server:
        - `ping`: Keep-alive ping
        - `mark_read`: Mark notification as read
        - `subscribe_channel`: Subscribe to specific channels

        ### Server to Client:
        - `notification`: New notification received
        - `pong`: Response to ping
        - `read_confirmation`: Confirmation of read status
        - `subscription_confirmed`: Channel subscription confirmed

        ## Example Messages:

        **Client Ping:**
        ```json
        {"type": "ping", "timestamp": "2025-01-15T14:30:00Z"}
        ```

        **Server Notification:**
        ```json
        {
          "type": "notification",
          "data": {
            "id": "notification-id",
            "title": "New IEP Update",
            "message": "IEP document has been updated",
            "notification_type": "iep_update",
            "action_url": "/iep/12345"
          },
          "timestamp": "2025-01-15T14:30:00Z"
        }
        ```
      parameters:
        - name: token
          in: query
          required: true
          description: JWT authentication token
          schema:
            type: string
      responses:
        "101":
          description: WebSocket connection established
        "401":
          description: Authentication failed
        "4000":
          description: Authentication error (WebSocket close code)
        "4001":
          description: Missing user_id or tenant_id (WebSocket close code)

  /ws/status:
    get:
      tags:
        - WebSocket
      summary: WebSocket connection status
      description: Get current WebSocket connection statistics
      responses:
        "200":
          description: WebSocket status information
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_connections:
                    type: integer
                    description: Total active WebSocket connections
                  users_connected:
                    type: integer
                    description: Number of unique users connected
                  tenants_connected:
                    type: integer
                    description: Number of unique tenants with connections
                  server_instance:
                    type: string
                    description: Server instance identifier

  /health:
    get:
      tags:
        - System
      summary: Health check
      description: Service health status
      security: []
      responses:
        "200":
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                  redis:
                    type: string
                    example: "connected"
                  websocket_connections:
                    type: integer
                  version:
                    type: string
                    example: "1.0.0"
        "503":
          description: Service is unhealthy

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    NotificationType:
      type: string
      enum:
        - system
        - iep_update
        - assessment_complete
        - signature_request
        - signature_complete
        - daily_digest
        - user_mention
        - deadline_reminder
        - collaboration_invite

    NotificationPriority:
      type: string
      enum:
        - low
        - normal
        - high
        - urgent

    NotificationStatus:
      type: string
      enum:
        - pending
        - sent
        - delivered
        - read
        - failed

    PushSubscriptionCreate:
      type: object
      required:
        - endpoint
        - p256dh_key
        - auth_key
      properties:
        endpoint:
          type: string
          maxLength: 1000
          description: Push service endpoint URL
        p256dh_key:
          type: string
          maxLength: 255
          description: P-256 ECDH public key for encryption
        auth_key:
          type: string
          maxLength: 255
          description: Authentication secret for encryption
        user_agent:
          type: string
          maxLength: 1000
          description: Browser user agent string
        device_info:
          type: object
          description: Additional device information
        notification_preferences:
          type: object
          description: User notification preferences for this device

    PushSubscriptionResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        endpoint:
          type: string
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
        last_used_at:
          type: string
          format: date-time
          nullable: true

    NotificationCreate:
      type: object
      required:
        - title
        - message
        - notification_type
      properties:
        title:
          type: string
          maxLength: 500
          description: Notification title
        message:
          type: string
          minLength: 1
          description: Notification message body
        notification_type:
          $ref: "#/components/schemas/NotificationType"
        priority:
          $ref: "#/components/schemas/NotificationPriority"
          default: normal
        channels:
          type: array
          items:
            type: string
          default: ["in_app", "websocket"]
          description: Delivery channels for this notification
        metadata:
          type: object
          description: Additional notification metadata
        context_data:
          type: object
          description: Related entity data
        action_url:
          type: string
          maxLength: 1000
          description: URL for notification action
        scheduled_at:
          type: string
          format: date-time
          description: When to deliver the notification

    NotificationResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        message:
          type: string
        notification_type:
          type: string
        priority:
          type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time
        read_at:
          type: string
          format: date-time
          nullable: true
        action_url:
          type: string
          nullable: true
        metadata:
          type: object

    NotificationListResponse:
      type: object
      properties:
        notifications:
          type: array
          items:
            $ref: "#/components/schemas/NotificationResponse"
        total_count:
          type: integer
        unread_count:
          type: integer
        has_more:
          type: boolean

    DigestSubscriptionUpdate:
      type: object
      properties:
        is_enabled:
          type: boolean
          default: true
        delivery_time:
          type: string
          pattern: "^([0-1][0-9]|2[0-3]):[0-5][0-9]$"
          default: "07:00"
          description: Delivery time in HH:MM format
        timezone:
          type: string
          maxLength: 50
          default: "America/New_York"
        frequency:
          type: string
          enum: [daily, weekly]
          default: "daily"
        include_types:
          type: array
          items:
            type: string
          description: Notification types to include in digest
        exclude_weekends:
          type: boolean
          default: false
        min_priority:
          $ref: "#/components/schemas/NotificationPriority"
          default: normal

    DigestSubscription:
      allOf:
        - $ref: "#/components/schemas/DigestSubscriptionUpdate"
        - type: object
          properties:
            id:
              type: string
              format: uuid
            last_sent_at:
              type: string
              format: date-time
              nullable: true
            next_scheduled_at:
              type: string
              format: date-time
              nullable: true

    NotificationStats:
      type: object
      properties:
        period_days:
          type: integer
        total_notifications:
          type: integer
        unread_notifications:
          type: integer
        read_rate:
          type: number
          format: float
          description: Percentage of notifications read (0.0 to 1.0)
        notifications_by_type:
          type: object
          additionalProperties:
            type: integer
          description: Count of notifications by type

  examples:
    IEPUpdateNotification:
      summary: IEP Update Notification
      value:
        title: "IEP Document Updated"
        message: "The IEP document for John Doe has been updated and requires your review."
        notification_type: "iep_update"
        priority: "high"
        channels: ["websocket", "push", "in_app"]
        action_url: "/iep/12345/review"
        metadata:
          iep_id: "12345"
          student_name: "John Doe"
          section_updated: "annual_goals"

    AssessmentCompleteNotification:
      summary: Assessment Complete Notification
      value:
        title: "Assessment Complete"
        message: "The psychological assessment for Jane Smith has been completed and is ready for review."
        notification_type: "assessment_complete"
        priority: "normal"
        channels: ["websocket", "push", "email"]
        action_url: "/assessment/67890/results"
        metadata:
          assessment_id: "67890"
          student_name: "Jane Smith"
          assessment_type: "psychological"
