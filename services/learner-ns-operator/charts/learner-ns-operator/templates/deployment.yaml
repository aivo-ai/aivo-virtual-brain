apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "learner-ns-operator.fullname" . }}
  namespace: {{ .Values.operator.namespace }}
  labels:
    {{- include "learner-ns-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "learner-ns-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: operator
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "learner-ns-operator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "learner-ns-operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: operator
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: {{ include "learner-ns-operator.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - python3
        - main.py
        env:
        - name: KOPF_LOG_LEVEL
          value: {{ .Values.operator.logLevel | quote }}
        - name: OPERATOR_NAMESPACE
          value: {{ .Values.operator.namespace | quote }}
        - name: DEFAULT_VAULT_ROLE
          value: {{ .Values.operator.defaultVaultRole | quote }}
        ports:
        {{- if .Values.health.enabled }}
        - name: health
          containerPort: {{ .Values.health.port }}
          protocol: TCP
        {{- end }}
        {{- if .Values.monitoring.enabled }}
        - name: metrics
          containerPort: 8080
          protocol: TCP
        {{- end }}
        {{- if .Values.health.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.health.path }}
            port: health
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: {{ .Values.health.path }}
            port: health
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 1
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        {{- if .Values.operator.webhook.enabled }}
        - name: webhook-certs
          mountPath: /tmp/k8s-webhook-server/serving-certs
          readOnly: true
        {{- end }}
      volumes:
      - name: tmp
        emptyDir: {}
      {{- if .Values.operator.webhook.enabled }}
      - name: webhook-certs
        secret:
          secretName: {{ include "learner-ns-operator.fullname" . }}-webhook-certs
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
